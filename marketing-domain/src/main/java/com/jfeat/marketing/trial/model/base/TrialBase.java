/*
 *   Copyright (C) 2014-2018 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines fields related to the database table.
 *
 * DON'T EDIT IT. OTHERWIDE IT WILL BE OVERRIDE WHEN RE-GENERATING IF TABLE CHANGE.
 */
package com.jfeat.marketing.trial.model.base;

import com.jfinal.plugin.activerecord.IBean;
import com.jfeat.core.BaseModel;
import java.math.BigDecimal;
import java.util.Date;

public abstract class TrialBase<M extends TrialBase<?>> extends BaseModel<M> implements IBean {

    /**
     * Table fields 
     */
    public enum Fields {
        ID("id"),
        PRODUCT_ID("product_id"),
        PRICE("price"),
        NAME("name"),
        SHORT_NOTE("short_note"),
        ENABLED("enabled"),
        START_TIME("start_time"),
        END_TIME("end_time"),
        COVER("cover"),
        NOTE("note"),
        INDEX("index"),
        SHIPPING_TYPE("shipping_type"),
        PAYMENT_TYPE("payment_type"),
        VERSION("version");
        
        private String name;
        Fields(String name) {
            this.name = name;
        }

        public String toString() {
            return name;
        }
        public String like(Object obj) {
            return new StringBuilder(this.toString()).append(" LIKE ").append(obj).toString();
        }
        public String eq(Object obj) {
            return new StringBuilder(this.toString()).append("=").append(obj).toString();
        }
        public String ge(Object obj) {
            return new StringBuilder(this.toString()).append(">=").append(obj).toString();
        }
        public String lt(Object obj) {
            return new StringBuilder(this.toString()).append("<").append(obj).toString();
        }
        public String gt(Object obj) {
            return new StringBuilder(this.toString()).append(">").append(obj).toString();
        }
        public String le(Object obj) {
            return new StringBuilder(this.toString()).append("<=").append(obj).toString();
        }
        public String isNull() {
            return new StringBuilder(this.toString()).append(" IS NULL").toString();
        }
        public String notNull() {
            return new StringBuilder(this.toString()).append(" IS NOT NULL").toString();
        }
        public String notEquals(Object obj) {
            return new StringBuilder(this.toString()).append("<>").append(obj).toString();
        }
    }

    public void setId(Integer var) {
        set(Fields.ID.toString(), var);
    }

    public Integer getId() {
        return (Integer) get(Fields.ID.toString());
    }

    public void setProductId(Integer var) {
        set(Fields.PRODUCT_ID.toString(), var);
    }

    public Integer getProductId() {
        return (Integer) get(Fields.PRODUCT_ID.toString());
    }

    public void setPrice(BigDecimal var) {
        set(Fields.PRICE.toString(), var);
    }

    public BigDecimal getPrice() {
        return (BigDecimal) get(Fields.PRICE.toString());
    }

    public void setName(String var) {
        set(Fields.NAME.toString(), var);
    }

    public String getName() {
        return (String) get(Fields.NAME.toString());
    }

    public void setShortNote(String var) {
        set(Fields.SHORT_NOTE.toString(), var);
    }

    public String getShortNote() {
        return (String) get(Fields.SHORT_NOTE.toString());
    }

    public void setEnabled(Integer var) {
        set(Fields.ENABLED.toString(), var);
    }

    public Integer getEnabled() {
        return (Integer) get(Fields.ENABLED.toString());
    }

    public void setStartTime(Date var) {
        set(Fields.START_TIME.toString(), var);
    }

    public Date getStartTime() {
        return (Date) get(Fields.START_TIME.toString());
    }

    public void setEndTime(Date var) {
        set(Fields.END_TIME.toString(), var);
    }

    public Date getEndTime() {
        return (Date) get(Fields.END_TIME.toString());
    }

    public void setCover(String var) {
        set(Fields.COVER.toString(), var);
    }

    public String getCover() {
        return (String) get(Fields.COVER.toString());
    }

    public void setNote(String var) {
        set(Fields.NOTE.toString(), var);
    }

    public String getNote() {
        return (String) get(Fields.NOTE.toString());
    }

    public void setIndex(Integer var) {
        set(Fields.INDEX.toString(), var);
    }

    public Integer getIndex() {
        return (Integer) get(Fields.INDEX.toString());
    }

    public void setShippingType(Integer var) {
        set(Fields.SHIPPING_TYPE.toString(), var);
    }

    public Integer getShippingType() {
        return (Integer) get(Fields.SHIPPING_TYPE.toString());
    }

    public void setPaymentType(String var) {
        set(Fields.PAYMENT_TYPE.toString(), var);
    }

    public String getPaymentType() {
        return (String) get(Fields.PAYMENT_TYPE.toString());
    }

    public void setVersion(Integer var) {
        set(Fields.VERSION.toString(), var);
    }

    public Integer getVersion() {
        return (Integer) get(Fields.VERSION.toString());
    }


    ///////////////////////////////////////////////////////////////////////////
    
}
