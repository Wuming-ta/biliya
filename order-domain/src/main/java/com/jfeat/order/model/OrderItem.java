/*
 *   Copyright (C) 2014-2016 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines the model for the table. All customize operation should 
 * be written here. Such as query/update/delete.
 * The controller calls this object.
 */
package com.jfeat.order.model;

import com.jfeat.kit.SqlQuery;
import com.jfeat.order.model.base.OrderItemBase;
import com.jfinal.ext.plugin.tablebind.TableBind;

import java.util.List;

@TableBind(tableName = "t_order_item")
public class OrderItem extends OrderItemBase<OrderItem> {

    /**
     * Only use for query.
     */
    public static OrderItem dao = new OrderItem();

    public enum Status {
        CREATED,
        DELIVERING,
        DELIVERED,
        REFUNDING,
        REFUNDED
    }

    public Order getOrder() {
        return Order.dao.findById(getOrderId());
    }

    public List<OrderItem> findByOrderId(Integer orderId) {
        SqlQuery query = new SqlQuery();
        query.from(getTableName());
        query.where(Fields.ORDER_ID.eq("?"));
        return find(query.sql(), orderId);
    }

    public boolean save() {
        setStatus(Status.CREATED.toString());
        return super.save();
    }

    public OrderItem findFirstByOrderIdProductIdProductSpecificationId(Integer orderId, Integer productId, Integer productSpecificationId) {
        SqlQuery query = new SqlQuery();
        query.from(getTableName());
        query.where(Fields.ORDER_ID.eq("?"));
        if (productId != null) {
            query.and(Fields.PRODUCT_ID.eq("?"));
        }
        if (productSpecificationId != null) {
            query.and(Fields.PRODUCT_SPECIFICATION_ID.eq("?"));
        }
        return findFirst(query.sql(), orderId, productId);
    }
}
