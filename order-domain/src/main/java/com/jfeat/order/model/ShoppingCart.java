/*
 *   Copyright (C) 2014-2016 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines the model for the table. All customize operation should 
 * be written here. Such as query/update/delete.
 * The controller calls this object.
 */
package com.jfeat.order.model;

import com.jfeat.kit.SqlQuery;
import com.jfeat.kit.SqlUpdate;
import com.jfeat.order.model.base.ShoppingCartBase;
import com.jfinal.ext.plugin.tablebind.TableBind;
import com.jfinal.plugin.activerecord.Db;

import java.util.Date;
import java.util.List;

@TableBind(tableName = "t_shopping_cart")
public class ShoppingCart extends ShoppingCartBase<ShoppingCart> {

    /**
     * Only use for query.
     */
    public static ShoppingCart dao = new ShoppingCart();

    public void cleanup(int userId) {
        SqlUpdate update = new SqlUpdate();
        update.delete(getTableName());
        update.where(Fields.USER_ID.eq("?"));
        Db.update(update.sql(), userId);
    }

    public void cleanupByDate(String date) {
        Db.update("delete from t_shopping_cart where created_date<?", date);
    }

    public boolean save() {
        setCreatedDate(new Date());
        return super.save();
    }

    public List<ShoppingCart> findByUserId(int userId) {
        SqlQuery query = new SqlQuery();
        query.from(getTableName());
        query.where(Fields.USER_ID.eq("?"));
        return find(query.sql(), userId);
    }

    public List<ShoppingCart> findByProductId(int productId) {
        SqlQuery query = new SqlQuery();
        query.from(getTableName());
        query.where(Fields.PRODUCT_ID.eq("?"));
        return find(query.sql(), productId);
    }

    public List<ShoppingCart> findByProductSpecificationId(int specificationId) {
        SqlQuery query = new SqlQuery();
        query.from(getTableName());
        query.where(Fields.PRODUCT_SPECIFICATION_ID.eq("?"));
        return find(query.sql(), specificationId);
    }
}
