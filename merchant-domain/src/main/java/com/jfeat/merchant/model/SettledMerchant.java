/*
 *   Copyright (C) 2014-2017 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines the model for the table. All customize operation should 
 * be written here. Such as query/update/delete.
 * The controller calls this object.
 */
package com.jfeat.merchant.model;

import com.jfeat.merchant.model.base.SettledMerchantBase;
import com.jfinal.ext.plugin.tablebind.TableBind;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

import java.util.List;

@TableBind(tableName = "t_settled_merchant")
public class SettledMerchant extends SettledMerchantBase<SettledMerchant> {

    /**
     * Only use for query.
     */
    public static SettledMerchant dao = new SettledMerchant();

    public enum Status {
        INIT,
        APPROVING,
        APPROVED,
        REJECTED,
        LOCKED
    }

    /**
     * 去掉商业秘密属性
     */
    public void removeSecretAttrs() {
        String[] attrs = new String[] {
                Fields.BUSINESS_LICENSE_IMAGE.toString(),
                Fields.BUSINESS_LICENSE_NUMBER.toString(),
                Fields.ID_BACK.toString(),
                Fields.ID_FRONT.toString(),
                Fields.ID_NUMBER.toString(),
                Fields.CONTACT_EMAIL.toString(),
                Fields.CONTACT_PHONE.toString(),
                Fields.CONTACT_USER.toString()
        };
        remove(attrs);
    }

    public List<SettledMerchant> findByStatus(Status status) {
        return findByField(Fields.STATUS.toString(), status.toString());
    }

    public List<SettledMerchant> findByTypeId(Integer typeId) {
        return findByField(Fields.TYPE_ID.toString(), typeId);
    }

    public SettledMerchantType getSettledMerchantType() {
        return SettledMerchantType.dao.findById(getTypeId());
    }

    public List<SettledMerchantApproveLog> getSettledMerchantApproveLogs() {
        return SettledMerchantApproveLog.dao.findByMerchantId(getId());
    }

    public boolean save() {
        this.setStatus(Status.INIT.toString());
        return super.save();
    }

    public boolean updateUser(Integer userId) {
        Db.update("delete from t_user_settled_merchant where user_id=?", userId);
        Record record = new Record();
        record.set("merchant_id", getId());
        record.set("user_id", userId);
        Db.save("t_user_settled_merchant", record);
        return true;
    }
}
