/*
 *   Copyright (C) 2014-2017 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines fields related to the database table.
 *
 * DON'T EDIT IT. OTHERWIDE IT WILL BE OVERRIDE WHEN RE-GENERATING IF TABLE CHANGE.
 */
package com.jfeat.misc.model.base;

import com.alibaba.druid.util.StringUtils;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.jfinal.plugin.activerecord.IBean;
import com.jfeat.core.BaseModel;
import java.math.BigDecimal;
import java.util.Date;

public abstract class AdBase<M extends AdBase<?>> extends BaseModel<M> implements IBean {

    /**
     * Table fields 
     */
    public enum Fields {
        ID("id"),
        GROUP_ID("group_id"),
        NAME("name"),
        IMAGE("image"),
        TYPE("type"),
        ENABLED("enabled"),
        TARGET_URL("target_url"),
        STRATEGY("strategy");

        Fields(String name) {
            this.name = name;
        }

        
        private String name;
        Fields(String name) {
            this.name = name;
        }

        public String toString() {
            return name;
        }
        public String like(Object obj) {
            return new StringBuilder(this.toString()).append(" LIKE ").append(obj).toString();
        }
        public String eq(Object obj) {
            return new StringBuilder(this.toString()).append("=").append(obj).toString();
        }
        public String ge(Object obj) {
            return new StringBuilder(this.toString()).append(">=").append(obj).toString();
        }
        public String lt(Object obj) {
            return new StringBuilder(this.toString()).append("<").append(obj).toString();
        }
        public String le(Object obj) {
            return new StringBuilder(this.toString()).append("<=").append(obj).toString();
        }
        public String isNull() {
            return new StringBuilder(this.toString()).append(" IS NULL").toString();
        }
        public String notNull() {
            return new StringBuilder(this.toString()).append(" NOT NULL").toString();
        }
        public String notEquals(Object obj) {
            return new StringBuilder(this.toString()).append("<>").append(obj).toString();
        }
    }

    public void setId(Integer var) {
        set(Fields.ID.toString(), var);
    }

    public Integer getId() {
        return (Integer) get(Fields.ID.toString());
    }

    public void setGroupId(Integer var) {
        set(Fields.GROUP_ID.toString(), var);
    }

    public Integer getGroupId() {
        return (Integer) get(Fields.GROUP_ID.toString());
    }

    public void setName(String var) {
        set(Fields.NAME.toString(), var);
    }

    public String getName() {
        return (String) get(Fields.NAME.toString());
    }

    public void setImage(String var) {
        set(Fields.IMAGE.toString(), var);
    }

    public String getImage() {
        return (String) get(Fields.IMAGE.toString());
    }

    public String getUrl() {
        if (!StringUtils.isEmpty(this.getImage)) {
            try {
                JSONArray images = JSON.parseArray(this.getImage);
                if (images != null && images.size() > 0) {
                    JSONObject img = images.getJSONObject(0);
                    return img.getString("url");
                }
            } catch (Exception var3) {
            }
        }
        return this.getImage;
    }

    public void setType(String var) {
        set(Fields.TYPE.toString(), var);
    }

    public String getType() {
        return (String) get(Fields.TYPE.toString());
    }

    public void setEnabled(Integer var) {
        set(Fields.ENABLED.toString(), var);
    }

    public Integer getEnabled() {
        return (Integer) get(Fields.ENABLED.toString());
    }

    public void setTargetUrl(String var) {
        set(Fields.TARGET_URL.toString(), var);
    }

    public String getTargetUrl() {
        return (String) get(Fields.TARGET_URL.toString());
    }

    public void setStrategy(String var) {
        set(Fields.STRATEGY.toString(), var);
    }

    public String getStrategy() {
        return (String) get(Fields.STRATEGY.toString());
    }


    ///////////////////////////////////////////////////////////////////////////
    
}
