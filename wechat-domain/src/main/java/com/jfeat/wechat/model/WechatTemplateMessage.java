/*
 *   Copyright (C) 2014-2017 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines the model for the table. All customize operation should 
 * be written here. Such as query/update/delete.
 * The controller calls this object.
 */
package com.jfeat.wechat.model;

import com.jfeat.wechat.model.base.WechatTemplateMessageBase;
import com.jfinal.ext.plugin.tablebind.TableBind;
import com.jfinal.plugin.activerecord.Db;

import java.util.List;

@TableBind(tableName = "t_wechat_template_message")
public class WechatTemplateMessage extends WechatTemplateMessageBase<WechatTemplateMessage> {

    public static final int ENABLED = 1;
    public static final int DISABLED = 0;

    /**
     * Only use for query.
     */
    public static WechatTemplateMessage dao = new WechatTemplateMessage();

    public WechatTemplateMessage findByIdJoin(Integer id) {
        String sql = "select a.*,b.display_name as type_display_name from t_wechat_template_message as a" +
                " left join t_wechat_message_type as b" +
                " on a.type_id=b.id" +
                " where a.id=?";
        return findFirst(sql, id);
    }

    public WechatTemplateMessage findEnabledByTypeId(Integer typeId) {
        String[] fields = new String[] {
            Fields.TYPE_ID.toString(), Fields.ENABLED.toString()
        };
        Object[] values = new Object[] {
            typeId, ENABLED
        };
        List<WechatTemplateMessage> list = findByFields(fields, values);
        return list.size() > 0 ? list.get(0) : null;
    }

    public List<WechatTemplateMessage> findByTypeId(Integer typeId) {
        return find("select a.*,b.display_name as type_display_name from t_wechat_template_message as a join t_wechat_message_type as b on a.type_id=b.id  where a.type_id=?", typeId);
    }

    public int toggleEnableByTypeId(Integer typeId, Integer enableOrDisable) {
        return Db.update("update t_wechat_template_message set enabled=? where type_id=?", enableOrDisable, typeId);
    }

    public WechatMessageType getWechatMessageType() {
        return WechatMessageType.dao.findById(getTypeId());
    }

    public List<WechatField> getWechatFields() {
        return WechatField.dao.findByTemplateMessageId(getId());
    }
}
