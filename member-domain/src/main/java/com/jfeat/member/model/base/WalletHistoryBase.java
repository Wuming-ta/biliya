/*
 *   Copyright (C) 2014-2018 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines fields related to the database table.
 *
 * DON'T EDIT IT. OTHERWIDE IT WILL BE OVERRIDE WHEN RE-GENERATING IF TABLE CHANGE.
 */
package com.jfeat.member.model.base;

import com.jfinal.plugin.activerecord.IBean;
import com.jfeat.core.BaseModel;
import java.math.BigDecimal;
import java.util.Date;

public abstract class WalletHistoryBase<M extends WalletHistoryBase<?>> extends BaseModel<M> implements IBean {

    /**
     * Table fields 
     */
    public enum Fields {
        ID("id"),
        WALLET_ID("wallet_id"),
        CREATED_TIME("created_time"),
        TYPE("type"),
        AMOUNT("amount"),
        GIFT_AMOUNT("gift_amount"),
        BALANCE("balance"),
        GIFT_BALANCE("gift_balance"),
        NOTE("note");
        
        private String name;
        Fields(String name) {
            this.name = name;
        }

        public String toString() {
            return name;
        }
        public String like(Object obj) {
            return new StringBuilder(this.toString()).append(" LIKE ").append(obj).toString();
        }
        public String eq(Object obj) {
            return new StringBuilder(this.toString()).append("=").append(obj).toString();
        }
        public String ge(Object obj) {
            return new StringBuilder(this.toString()).append(">=").append(obj).toString();
        }
        public String lt(Object obj) {
            return new StringBuilder(this.toString()).append("<").append(obj).toString();
        }
        public String gt(Object obj) {
            return new StringBuilder(this.toString()).append(">").append(obj).toString();
        }
        public String le(Object obj) {
            return new StringBuilder(this.toString()).append("<=").append(obj).toString();
        }
        public String isNull() {
            return new StringBuilder(this.toString()).append(" IS NULL").toString();
        }
        public String notNull() {
            return new StringBuilder(this.toString()).append(" IS NOT NULL").toString();
        }
        public String notEquals(Object obj) {
            return new StringBuilder(this.toString()).append("<>").append(obj).toString();
        }
    }

    public void setId(Integer var) {
        set(Fields.ID.toString(), var);
    }

    public Integer getId() {
        return (Integer) get(Fields.ID.toString());
    }

    public void setWalletId(Integer var) {
        set(Fields.WALLET_ID.toString(), var);
    }

    public Integer getWalletId() {
        return (Integer) get(Fields.WALLET_ID.toString());
    }

    public void setCreatedTime(Date var) {
        set(Fields.CREATED_TIME.toString(), var);
    }

    public Date getCreatedTime() {
        return (Date) get(Fields.CREATED_TIME.toString());
    }

    public void setType(String var) {
        set(Fields.TYPE.toString(), var);
    }

    public String getType() {
        return (String) get(Fields.TYPE.toString());
    }

    public void setAmount(BigDecimal var) {
        set(Fields.AMOUNT.toString(), var);
    }

    public BigDecimal getAmount() {
        return (BigDecimal) get(Fields.AMOUNT.toString());
    }

    public void setGiftAmount(BigDecimal var) {
        set(Fields.GIFT_AMOUNT.toString(), var);
    }

    public BigDecimal getGiftAmount() {
        return (BigDecimal) get(Fields.GIFT_AMOUNT.toString());
    }

    public void setBalance(BigDecimal var) {
        set(Fields.BALANCE.toString(), var);
    }

    public BigDecimal getBalance() {
        return (BigDecimal) get(Fields.BALANCE.toString());
    }

    public void setGiftBalance(BigDecimal var) {
        set(Fields.GIFT_BALANCE.toString(), var);
    }

    public BigDecimal getGiftBalance() {
        return (BigDecimal) get(Fields.GIFT_BALANCE.toString());
    }

    public void setNote(String var) {
        set(Fields.NOTE.toString(), var);
    }

    public String getNote() {
        return (String) get(Fields.NOTE.toString());
    }


    ///////////////////////////////////////////////////////////////////////////
    
}
