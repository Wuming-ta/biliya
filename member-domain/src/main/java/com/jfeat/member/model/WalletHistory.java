/*
 *   Copyright (C) 2014-2018 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines the model for the table. All customize operation should 
 * be written here. Such as query/update/delete.
 * The controller calls this object.
 */
package com.jfeat.member.model;

import com.jfeat.member.model.base.WalletHistoryBase;
import com.jfeat.member.model.param.WalletHistoryParam;
import com.jfinal.ext.plugin.tablebind.TableBind;
import com.jfeat.member.model.Wallet;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@TableBind(tableName = "t_wallet_history")
public class WalletHistory extends WalletHistoryBase<WalletHistory> {

    /**
     * Only use for query.
     */
    public static WalletHistory dao = new WalletHistory();

    public enum Type {
        // 充值
        CHARGE {
            @Override
            public String toChineseName() {
                return "钱包充值";
            }
        },
        // 支付
        PAY {
            @Override
            public String toChineseName() {
                return "钱包支付";
            }
        },
        // 提成转入
        WITHDRAW {
            @Override
            public String toChineseName() {
                return "提成转入钱包";
            }
        },
        // 赠送
        GIFT {
            @Override
            public String toChineseName() {
                return "赠送";
            }
        },
        // 退款
        REFUND {
            @Override
            public String toChineseName() {
                return "退款回钱包";
            }
        };

        public String toChineseName() {
            return this.toString();
        }
    }

    @Override
    public boolean save() {
        setCreatedTime(new Date());
        return super.save();
    }

    public List<WalletHistory> findByWalletId(Integer walletId) {
        return findByField(Fields.WALLET_ID.toString(), walletId);
    }

    public Wallet getWallet() {
        return Wallet.dao.findById(getWalletId());
    }

    public Page<WalletHistory> paginate(WalletHistoryParam walletHistoryParam) {
        List<Object> params = new ArrayList<>();
        String select = "select * ";
        StringBuilder builder = new StringBuilder("from t_wallet_history where 1=1 ");
        if (walletHistoryParam.getWalletId() != null) {
            builder.append(" and ").append(Fields.WALLET_ID.eq("?"));
            params.add(walletHistoryParam.getWalletId());
        }
        if (walletHistoryParam.getStartTime() != null && walletHistoryParam.getEndTime() != null) {
            builder.append(" and ").append(Fields.CREATED_TIME.toString()).append(" between ? and ?");
            params.add(walletHistoryParam.getStartTime());
            params.add(walletHistoryParam.getEndTime());
        }
        if (StrKit.notBlank(walletHistoryParam.getType())) {
            builder.append(" and ").append(Fields.TYPE.eq("?"));
            params.add(walletHistoryParam.getType());
        }
        builder.append(" order by id desc ");
        return super.paginate(walletHistoryParam.getPageNumber(), walletHistoryParam.getPageSize(),
                select, builder.toString(), params.toArray());
    }
}
