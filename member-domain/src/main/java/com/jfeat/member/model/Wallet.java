/*
 *   Copyright (C) 2014-2018 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines the model for the table. All customize operation should 
 * be written here. Such as query/update/delete.
 * The controller calls this object.
 */
package com.jfeat.member.model;

import com.jfeat.identity.model.User;
import com.jfeat.kit.Digests;
import com.jfeat.kit.Encodes;
import com.jfeat.member.exception.WalletBalanceException;
import com.jfeat.member.model.base.WalletBase;
import com.jfinal.ext.plugin.tablebind.TableBind;
import com.jfinal.plugin.activerecord.Db;


import java.math.BigDecimal;
import java.util.List;

@TableBind(tableName = "t_wallet")
public class Wallet extends WalletBase<Wallet> {

    public static final int HASH_INTERATIONS = 1024;
    private static final int SALT_SIZE = 8;

    /**
     * Only use for query.
     */
    public static Wallet dao = new Wallet();

    public Wallet findByUserId(Integer userId) {
        return findFirstByField(Fields.USER_ID.toString(), userId);
    }

    public User getUser() {
        return User.dao.findById(getUserId());
    }


    /**
     * 充值
     *
     */
    public static boolean increaseBalance(Integer walletId, BigDecimal amount, BigDecimal giftAmount) {
        String sql = "update t_wallet set accumulative_amount=accumulative_amount+?, " +
                "accumulative_gift_amount=accumulative_gift_amount+?, " +
                "balance=balance+?, " +
                "gift_balance=gift_balance+? where id = ?";
        int result = Db.update(sql, amount, giftAmount, amount, giftAmount, walletId);
        return result > 0;
    }

    /**
     * 使用
     *
     */
    public static boolean decreaseBalance(Integer walletId, BigDecimal amount, BigDecimal giftAmount) {
        String sql = "update t_wallet set balance=balance-?, gift_balance=gift_balance-? where id = ?";
        int result = Db.update(sql, amount, giftAmount, walletId);
        return result > 0;
    }

    public boolean verifyPassword(String password) {
        String hashPassword = Encodes.encodeHex(Digests.sha1(password.getBytes(), Encodes.decodeHex(getSalt()), HASH_INTERATIONS));
        return hashPassword.equals(getPassword());
    }

    /**
     * 设定安全的密码，生成随机的salt并经过1024次 sha-1 hash
     */
    public static void entryptPassword(Wallet wallet) {
        byte[] salt = Digests.generateSalt(SALT_SIZE);
        wallet.setSalt(Encodes.encodeHex(salt));
        byte[] hashPassword = Digests.sha1(wallet.getPassword().getBytes(), salt, HASH_INTERATIONS);
        wallet.setPassword(Encodes.encodeHex(hashPassword));
        wallet.update();
    }
}
