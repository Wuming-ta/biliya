/*
 *   Copyright (C) 2014-2016 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines the model for the table. All customize operation should 
 * be written here. Such as query/update/delete.
 * The controller calls this object.
 */
package com.jfeat.member.model;

import com.jfeat.member.model.base.MemberPointHistoryBase;
import com.jfinal.ext.plugin.tablebind.TableBind;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

@TableBind(tableName = "t_member_point_history")
public class MemberPointHistory extends MemberPointHistoryBase<MemberPointHistory> {

    /**
     * Only use for query.
     */
    public static MemberPointHistory dao = new MemberPointHistory();

    public Page<MemberPointHistory> paginate(int pageNumber, int pageSize, int memberExtId, String startTime, String endTime) {
        String select = "select *";
        List<Object> params = new ArrayList<>();
        StringBuilder builder = new StringBuilder();
        builder.append("from ");
        builder.append(getTableName());
        builder.append(" where ");
        builder.append(Fields.MEMBER_EXT_ID.eq("?"));
        params.add(memberExtId);
        if (StrKit.notBlank(startTime)) {
            builder.append(" and ");
            builder.append(Fields.CHANGED_DATE.ge("?"));
            params.add(startTime);
        }
        if (StrKit.notBlank(endTime)) {
            builder.append(" and ");
            builder.append(Fields.CHANGED_DATE.le("?"));
            params.add(endTime);
        }
        return paginate(pageNumber, pageSize, select, builder.toString(), params.toArray());
    }
}
