/*
 *   Copyright (C) 2014-2017 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines fields related to the database table.
 *
 * DON'T EDIT IT. OTHERWIDE IT WILL BE OVERRIDE WHEN RE-GENERATING IF TABLE CHANGE.
 */
package com.jfeat.member.model.base;

import com.jfinal.plugin.activerecord.IBean;
import com.jfeat.core.BaseModel;
import java.math.BigDecimal;
import java.util.Date;

public abstract class CouponStatisticsBase<M extends CouponStatisticsBase<?>> extends BaseModel<M> implements IBean {

    /**
     * Table fields 
     */
    public enum Fields {
        ID("id"),
        STATISTIC_DATE("statistic_date"),
        GRANT_COUNT("grant_count"),
        USED_COUNT("used_count"),
        OVERDUE_COUNT("overdue_count"),
        GIVEN_BY_REGISTER_COUNT("given_by_register_count"),
        TAKEN_BY_LINK_COUNT("taken_by_link_count"),
        SYSTEM_GIVEN_COUNT("system_given_count");
        
        private String name;
        Fields(String name) {
            this.name = name;
        }

        public String toString() {
            return name;
        }
        public String like(Object obj) {
            return new StringBuilder(this.toString()).append(" LIKE ").append(obj).toString();
        }
        public String eq(Object obj) {
            return new StringBuilder(this.toString()).append("=").append(obj).toString();
        }
        public String ge(Object obj) {
            return new StringBuilder(this.toString()).append(">=").append(obj).toString();
        }
        public String lt(Object obj) {
            return new StringBuilder(this.toString()).append("<").append(obj).toString();
        }
        public String le(Object obj) {
            return new StringBuilder(this.toString()).append("<=").append(obj).toString();
        }
        public String isNull() {
            return new StringBuilder(this.toString()).append(" IS NULL").toString();
        }
        public String notNull() {
            return new StringBuilder(this.toString()).append(" NOT NULL").toString();
        }
        public String notEquals(Object obj) {
            return new StringBuilder(this.toString()).append("<>").append(obj).toString();
        }
    }

    public void setId(Integer var) {
        set(Fields.ID.toString(), var);
    }

    public Integer getId() {
        return (Integer) get(Fields.ID.toString());
    }

    public void setStatisticDate(Date var) {
        set(Fields.STATISTIC_DATE.toString(), var);
    }

    public Date getStatisticDate() {
        return (Date) get(Fields.STATISTIC_DATE.toString());
    }

    public void setGrantCount(Integer var) {
        set(Fields.GRANT_COUNT.toString(), var);
    }

    public Integer getGrantCount() {
        return (Integer) get(Fields.GRANT_COUNT.toString());
    }

    public void setUsedCount(Integer var) {
        set(Fields.USED_COUNT.toString(), var);
    }

    public Integer getUsedCount() {
        return (Integer) get(Fields.USED_COUNT.toString());
    }

    public void setOverdueCount(Integer var) {
        set(Fields.OVERDUE_COUNT.toString(), var);
    }

    public Integer getOverdueCount() {
        return (Integer) get(Fields.OVERDUE_COUNT.toString());
    }

    public void setGivenByRegisterCount(Integer var) {
        set(Fields.GIVEN_BY_REGISTER_COUNT.toString(), var);
    }

    public Integer getGivenByRegisterCount() {
        return (Integer) get(Fields.GIVEN_BY_REGISTER_COUNT.toString());
    }

    public void setTakenByLinkCount(Integer var) {
        set(Fields.TAKEN_BY_LINK_COUNT.toString(), var);
    }

    public Integer getTakenByLinkCount() {
        return (Integer) get(Fields.TAKEN_BY_LINK_COUNT.toString());
    }

    public void setSystemGivenCount(Integer var) {
        set(Fields.SYSTEM_GIVEN_COUNT.toString(), var);
    }

    public Integer getSystemGivenCount() {
        return (Integer) get(Fields.SYSTEM_GIVEN_COUNT.toString());
    }


    ///////////////////////////////////////////////////////////////////////////
    
}
